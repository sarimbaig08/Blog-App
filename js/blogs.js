import {
  db,
  collection,
  getDocs,
  deleteDoc,
  doc,
  updateDoc,
} from "./firebase.js";

window.addEventListener("load", pageLoad);

async function pageLoad() {
  preloader.style.display = "block";

  cardParent.innerHTML = "";
  var userName = document.getElementById("userName");
  var userLoginName = window.localStorage.getItem("user");
  userLoginName = JSON.parse(userLoginName);
  if (!userLoginName) {
    window.location.replace("../index.html");
  }
  userName.innerHTML = userLoginName.name;

  const querySnapshot = await getDocs(collection(db, "blogs"));
  var temp = [];
  querySnapshot.forEach(function (doc) {
    if (doc.data().uid == userLoginName.uid) {
      var blogObj = {
        imgUrl: doc.data().imgUrl,
        blogTitle: doc.data().blogTitle,
        blogDes: doc.data().blogDes,
        uName: doc.data().uName,
        date: doc.data().date,
        isPrivate: doc.data().isPrivate,
        blogId: doc.id,
      };
      temp.push(blogObj);
    }
  });
  if (temp.length > 0) {
    for (var value of temp) {
      console.log(value);
      var createdCard = createCard(
        value.imgUrl,
        value.blogTitle,
        value.blogDes,
        value.uName,
        value.date,
        value.isPrivate,
        value.blogId
      );
      console.log("i am created card", createdCard); // Log the HTML generated by createCard
      cardParent.innerHTML += createdCard;
      console.log("i am inner html", cardParent.innerHTML);
    }
  } else {
    var noBlogError = document.getElementById("noBlogError");
    noBlogError.innerHTML = "No Blog Found !";
  }
  preloader.style.display = "none";
}

function editFunc(ele) {
  var currentblogTitle =
    ele.parentElement.parentElement.parentElement.children[0].children[0]
      .children[0].innerHTML;

  var currentBlogDes =
    ele.parentElement.parentElement.parentElement.children[0].children[1]
      .innerHTML;

  var currentIsPrivate = "";
  var lockSvg =
    ele.parentElement.parentElement.parentElement.children[0].children[0]
      .children[1];

  // console.log(currentblogTitle);
  // console.log(currentBlogDes);
  // console.log(currentIsPrivate);
  // console.log(lockSvg);
  // return;
  if (!lockSvg) {
    currentIsPrivate = false;
  } else {
    currentIsPrivate = true;
  }

  console.log(
    "Iam current detail",
    currentblogTitle,
    currentBlogDes,
    currentIsPrivate
  );

  var blogTitle = document.getElementById("blogTitle");
  var blogDes = document.getElementById("blogDes");
  var isPrivate = document.getElementById("isPrivate");

  blogTitle.value = currentblogTitle;
  blogDes.value = currentBlogDes;
  isPrivate.checked = currentIsPrivate;

  window.addEventListener("click", function () {
    updateFunc(ele, currentblogTitle, currentBlogDes, currentIsPrivate);
  });
}

async function updateFunc(
  ele,
  currentblogTitle,
  currentBlogDes,
  currentIsPrivate
) {
  // var blogTitle = document.getElementById("blogTitle");
  // var blogDes = document.getElementById("blogDes");
  // var isPrivate = document.getElementById("isPrivate");

  // currentblogTitle = blogTitle.value;
  // currentBlogDes = blogDes.value;
  // currentIsPrivate = isPrivate.checked;
  // console.log(currentblogTitle, "current");
  // console.log(currentBlogDes, "current");
  // console.log(currentIsPrivate, "current");

  var updatedBlog = {
    blogTitle: blogTitle.value,
    blogDes: blogDes.value,
    isPrivate: isPrivate.checked,
  };

  await updateDoc(doc(db, "blogs", ele.id), updatedBlog);
}

function deleteConfirm(ele) {
  var result = confirm("Are you sure you want to delete this blog?");
  console.log(result);

  if (result) {
    deleteFunc(ele);
  } else {
    return;
  }
}

async function deleteFunc(ele) {
  await deleteDoc(doc(db, "blogs", ele.id));
  alert("Deleted Successfully");
  ele.parentElement.parentElement.parentElement.parentElement.remove();
}

function createCard(imgUrl, blogTitle, blogDes, uName, date, isPrivate, id) {
  var userLoginName = window.localStorage.getItem("user");
  userLoginName = JSON.parse(userLoginName);
  var privateVal = "";
  if (isPrivate) {
    privateVal = ` <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      style="width: 25px; height: 25px"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z"
      />
    </svg>`;
  } else {
    privateVal = "";
  }
  var createdCard = `<div class="card cards" style="width: 19rem">
  <img src=${imgUrl} class="card-img-top" style="height: 200px;" alt="..." />
  <div class="card-body d-flex flex-column justify-content-between gap-2">
    <div style="overflow-wrap: anywhere;">
      <div class="d-flex justify-content-between ">
        <h5 class="card-title">${blogTitle}</h5>
        ${privateVal}
      </div>
      <p class="card-text">${blogDes}</p>
    </div>
    <div>
      <div class="d-flex gap-3">
       <button class="btn btn-primary w-50" onclick="editFunc(this)" data-bs-toggle="modal" data-bs-target="#exampleModal" id=${id}>Edit </button>
       <button class="btn btn-danger w-50" onclick="deleteConfirm(this)" id=${id}>Delete</button>
      </div>
      <hr class="m-2" />
      <div class="d-flex justify-content-between">
        <p class="m-0 italic">Created by ${uName}</p>
        <p class="m-0 italic">${date}</p>
      </div>
    </div>
  </div>
</div>`;
  return createdCard;
}
// data-bs-toggle="modal" data-bs-target="#deleteModal"
function logoutFunc() {
  localStorage.clear();
  window.location.replace("../index.html");
}

window.logoutFunc = logoutFunc;
window.editFunc = editFunc;
window.deleteFunc = deleteFunc;
window.deleteConfirm = deleteConfirm;
window.pageLoad = pageLoad;
// window.updateFunc = updateFunc;
